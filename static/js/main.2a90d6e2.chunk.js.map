{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","startImage","setStartImage","endIndexImage","widthContainer","translateXValue","useEffect","className","style","width","gap","transition","transform","map","imageUrl","index","src","alt","onClick","length","type","disabled","App","state","this","htmlFor","id","min","value","onChange","e","setState","Number","target","max","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a90d6e2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\nconst GAP_IMG = 10;\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [startImage, setStartImage] = useState(0);\n  const endIndexImage = startImage + frameSize;\n\n  const widthContainer = frameSize * itemWidth + GAP_IMG * frameSize;\n  const translateXValue = startImage === 0\n    ? 0\n    : startImage * (itemWidth + GAP_IMG);\n\n  const handlePrevClick = () => {\n    if (infinite && startImage === 0) {\n      setStartImage(images.length - frameSize);\n    } else {\n      setStartImage(\n        startImage > step\n          ? startImage - step\n          : 0,\n      );\n    }\n  };\n\n  const handleNextClick = () => {\n    if (infinite && endIndexImage === images.length) {\n      setStartImage(0);\n    } else {\n      setStartImage(\n        endIndexImage + step < images.length\n          ? startImage + step\n          : images.length - frameSize,\n      );\n    }\n  };\n\n  useEffect(() => {\n    setStartImage(0);\n  }, [frameSize]);\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{ width: widthContainer }}\n      >\n        <ul\n          className=\"Carousel__container__list\"\n          style={{\n            gap: GAP_IMG,\n            transition: `transform ${animationDuration}ms`,\n            transform: `translateX(${-(translateXValue)}px)`,\n          }}\n        >\n          {images.map((imageUrl, index) => (\n            <li\n              className=\"Carousel__container__list__item\"\n              key={imageUrl}\n            >\n              <img\n                className=\"Carousel__container__list__img\"\n                src={imageUrl}\n                alt={`${index + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"Carousel__container__block\">\n          <button\n            className=\"Carousel__container__block__button\"\n            onClick={handlePrevClick}\n            type=\"button\"\n            disabled={!infinite && startImage === 0}\n          >\n            Prev\n          </button>\n          <button\n            className=\"Carousel__container__block__button\"\n            onClick={handleNextClick}\n            type=\"button\"\n            data-cy=\"next\"\n            disabled={!infinite && images.length - frameSize === startImage}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy='title' className=\"App__title\">Carousel with {images.length} images</h1>\n        <div className=\"App__controls\">\n\n          <div className=\"App__controls__control\">\n            <label\n              className=\"App__controls__control__label\"\n              htmlFor=\"stepId\"\n            >\n              STEP:\n            </label>\n            <input\n              className=\"App__controls__control__input\"\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              value={step}\n              onChange={(e) => this.setState({\n                step: Number(e.target.value),\n              })}\n            />\n          </div>\n\n          <div className=\"App__controls__control\">\n            <label\n              className=\"App__controls__control__label\"\n              htmlFor=\"frameId\"\n            >\n              FRAME SIZE:\n            </label>\n            <input\n              className=\"App__controls__control__input\"\n              id=\"frameId\"\n              type=\"number\"\n              min={1}\n              max={images.length}\n              value={frameSize}\n              onChange={(e) => this.setState({\n                frameSize: Number(e.target.value),\n              })}\n            />\n          </div>\n\n          <div className=\"App__controls__control\">\n            <label\n              className=\"App__controls__control__label\"\n              htmlFor=\"itemId\"\n            >\n              ITEM WIDTH:\n            </label>\n            <input\n              className=\"App__controls__control__input\"\n              id=\"itemId\"\n              type=\"number\"\n              min={0}\n              step={10}\n              value={itemWidth}\n              onChange={(e) => this.setState({\n                itemWidth: Number(e.target.value),\n              })}\n            />\n          </div>\n\n          <div className=\"App__controls__control\">\n            <label\n              className=\"App__controls__control__label\"\n              htmlFor=\"animationId\"\n            >\n              ANIMATION DURATION:\n            </label>\n            <input\n              className=\"App__controls__control__input\"\n              id=\"animationId\"\n              type=\"number\"\n              min={0}\n              step={10}\n              value={animationDuration}\n              onChange={(e) => this.setState({\n                animationDuration: Number(e.target.value),\n              })}\n            />\n          </div>\n\n          <div className=\"App__controls__control\">\n            <label\n              className=\"App__controls__control__label\"\n              htmlFor=\"infiniteId\"\n            >\n              INFINITE:\n            </label>\n            <input\n              className=\"App__controls__control__input\"\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={(e) => this.setState({\n                infinite: e.target.checked,\n              })}\n            />\n          </div>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}